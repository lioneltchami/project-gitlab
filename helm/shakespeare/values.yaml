# Default values for shakespeare app
replicaCount: 2

image:
  repository: gcr.io/shakespeare/shakespeare-app
  pullPolicy: IfNotPresent
  tag: "latest"

# Multiple word instances configuration
instances:
  - name: "the"
    word: "the"
    replicas: 3
  - name: "COFFEE"
    word: "COFFEE"
    replicas: 2
  - name: "AND"
    word: "AND"
    replicas: 2
  - name: "tea"
    word: "tea"
    replicas: 1

serviceAccount:
  create: true
  annotations:
    iam.gke.io/gcp-service-account: shakespeare-app@your-project.iam.gserviceaccount.com
  name: "shakespeare-sa"

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 5000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: shakespeare.example.com
      paths:
        - path: /
          pathType: Prefix
          backend: "the"
        - path: /coffee
          pathType: Prefix
          backend: "COFFEE"
        - path: /COFFEE
          pathType: Prefix
          backend: "COFFEE"
        - path: /and
          pathType: Prefix
          backend: "AND"
        - path: /AND
          pathType: Prefix
          backend: "AND"
        - path: /tea
          pathType: Prefix
          backend: "tea"
  tls:
    - secretName: shakespeare-tls
      hosts:
        - shakespeare.example.com

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Health checks
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5

# Environment variables
env:
  - name: FLASK_ENV
    value: "production"
  - name: PORT
    value: "5000"
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: "/var/secrets/google/service-account.json"

# Secret configuration
secret:
  enabled: true
  name: "google-cloud-key"
  mountPath: "/var/secrets/google"

# Monitoring and observability
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    path: /metrics
    interval: 30s

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1